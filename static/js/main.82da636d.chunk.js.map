{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/Form.js","Components/Contacts/ContactsItem/ContactsItem.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","onChange","input","btn","Component","ContactsItem","id","onDelete","onClick","Contacts","contacts","map","Filter","App","filter","changeFilter","DeleteContact","contactId","prevState","contact","addContact","data","newContact","shortId","generate","toLocaleLowerCase","includes","alert","handleFormSubmit","pokemonName","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevContacts","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,IAAM,kBAAkB,MAAQ,oBAAoB,MAAQ,sB,+KCEnFC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAE1DC,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OAGzB,EAAKY,S,EAEPA,MAAQ,WACN,EAAKP,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,uDAIlC,OACE,uBAAMS,SAAUE,KAAKL,aAAcM,UAAWC,IAAEC,KAAhD,UACE,wBAAOF,UAAWC,IAAEE,MAApB,iBAEE,uBACEC,KAAK,OACLjB,KAAK,OACLM,MAAOM,KAAKb,MAAMC,KAClBkB,SAAUN,KAAKV,aACfW,UAAWC,IAAEK,WAGjB,wBAAON,UAAWC,IAAEE,MAApB,mBAEE,uBACEC,KAAK,OACLjB,KAAK,SACLM,MAAOM,KAAKb,MAAME,OAClBiB,SAAUN,KAAKV,aACfW,UAAWC,IAAEK,WAGjB,wBAAQF,KAAK,SAASJ,UAAWC,IAAEM,IAAnC,gC,GA5C0BC,aCHnB,SAASC,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,GAAIvB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQuB,EAAY,EAAZA,SACvD,OACE,+BACGxB,EADH,KACWC,EACT,wBAAQgB,KAAK,SAASQ,QAASD,EAA/B,sBAFOD,GCAE,SAASG,EAAT,GAA2C,IAAvBC,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,SAC3C,OACE,mCACE,6BACGG,EAASC,KAAI,gBAAGL,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACqB,EAAD,CAEEtB,KAAMA,EACNC,OAAQA,EACRuB,SAAU,kBAAMA,EAASD,KAHpBA,UCRF,SAASM,EAAT,GAAsC,IAApBvB,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SACtC,OACE,0DAEE,uBAAOD,KAAK,OAAOX,MAAOA,EAAOY,SAAUA,O,ICW5BY,E,4MACnB/B,MAAQ,CACN4B,SAAU,CACR,CAAEJ,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD8B,OAAQ,I,EAIVC,aAAe,SAAA7B,GACb,EAAKC,SAAS,CAAE2B,OAAQ5B,EAAEE,cAAcC,S,EAE1C2B,cAAgB,SAAAC,GACd,EAAK9B,UAAS,SAAA+B,GAAS,MAAK,CAC1BR,SAAUQ,EAAUR,SAASI,QAAO,SAAAK,GAAO,OAAIF,IAAcE,EAAQb,W,EAIzEc,WAAa,SAAAC,GACX,IAAMC,EAAa,CACjBhB,GAAIiB,IAAQC,WACZzC,KAAMsC,EAAKtC,KACXC,OAAQqC,EAAKrC,QAGS,EAAKF,MAAM4B,SAASC,KAAI,SAAAQ,GAAO,OACrDA,EAAQpC,KAAK0C,uBAG6BC,SAC1CL,EAAKtC,KAAK0C,qBAIVE,MAAM,GAAD,OAAIN,EAAKtC,KAAT,6BAEL,EAAKI,UAAS,SAAA+B,GACZ,MAAO,CACLR,SAAS,CAAEY,GAAH,mBAAkBJ,EAAUR,gB,EAM5CkB,iBAAmB,SAAAC,GACjB,EAAK1C,SAAS,CAAE0C,iB,kEAGhB,IAAMnB,EAAWoB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMxB,GAC9BsB,GACFrC,KAAKR,SAAS,CAAEuB,SAAUsB,M,yCAGXG,EAAWjB,GAC5B,IAAMkB,EAAelB,EAAUR,SACVf,KAAKb,MAAM4B,WACX0B,GACnBN,aAAaO,QAAQ,WAAYJ,KAAKK,UAAU3C,KAAKb,MAAM4B,a,+BAUrD,IAAD,EACsBf,KAAKb,MAA1B4B,EADD,EACCA,SAAUI,EADX,EACWA,OACZyB,EAAkB7B,EAASI,QAAO,SAAAK,GAAO,OAC7CA,EAAQpC,KAAK0C,oBAAoBC,SAASZ,EAAOW,wBAGnD,OACE,gCAGE,cAAC,IAAD,IAEA,2CACA,cAAC,EAAD,CAAMhC,SAAUE,KAAKyB,aACrB,0CACA,cAACR,EAAD,CAAQvB,MAAOyB,EAAQb,SAAUN,KAAKoB,eACtC,cAACN,EAAD,CAAUC,SAAU6B,EAAiBhC,SAAUZ,KAAKqB,uB,GAvF3BZ,aCHlBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82da636d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1lQvr\",\"btn\":\"Form_btn__1XO83\",\"label\":\"Form_label__2R1Jk\",\"input\":\"Form_input__2fAmv\"};","import s from './Form.module.css';\r\nimport { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    // this.props.onAlert(this.state.name);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            className={s.input}\r\n          ></input>\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","export default function ContactsItem({ id, name, number, onDelete }) {\r\n  return (\r\n    <li key={id}>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import ContactsItem from './ContactsItem/ContactsItem';\r\n\r\nexport default function Contacts({ contacts, onDelete }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactsItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","export default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Find contacts by Name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport shortId from 'shortid';\n// import PokemonForm from './Components/PokemonForm/PokemonForm';\n// import PokemonInfo from './Components/PokemonInfo/PokemonInfo';\n\nimport Form from './Components/Form/Form';\nimport Contacts from './Components/Contacts/Contacts';\n\nimport Filter from './Components/Filter/Filter';\n// import FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\n// import Statistics from './Components/Statistics/Statistics';\n\n// import Section from './Components/Section/Section';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // pokemonName: '',\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  DeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contactId !== contact.id),\n    }));\n  };\n\n  addContact = data => {\n    const newContact = {\n      id: shortId.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    const getContactsName = this.state.contacts.map(contact =>\n      contact.name.toLocaleLowerCase(),\n    );\n\n    const isAlreadyInContacts = getContactsName.includes(\n      data.name.toLocaleLowerCase(),\n    );\n\n    if (isAlreadyInContacts) {\n      alert(`${data.name} is already in contacts!`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [newContact, ...prevState.contacts],\n        };\n      });\n    }\n  };\n\n  handleFormSubmit = pokemonName => {\n    this.setState({ pokemonName });\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  // componentDidMount() {\n  //   fetch(\n  //     'https://pixabay.com/api/?q=cat&page=1&key=19126016-103aa59bb71a26917231b8540&image_type=photo&orientation=horizontal&per_page=12',\n  //   )\n  //     .then(res => res.json())\n  //     .then(console.log);\n  // }\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n\n    return (\n      <div>\n        {/* <PokemonForm onSubmit={this.handleFormSubmit} />\n        <PokemonInfo pokemonName={this.state.pokemonName} /> */}\n        <ToastContainer />\n\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <Contacts contacts={visibleContacts} onDelete={this.DeleteContact} />\n      </div>\n    );\n  }\n}\n\n// export default class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n//   handleBtnIncrement = e => {\n//     this.setState(prevState => ({\n//       [e.target.name]: prevState[e.target.name] + 1,\n//     }));\n//   };\n\n//   countTotalFeedback() {\n//     return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n//   }\n//   countPositiveFeedbackPercentage() {\n//     return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n//   }\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const optionsName = Object.keys(this.state);\n\n//     return (\n//       <>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={optionsName}\n//             onLeaveFeedback={this.handleBtnIncrement}\n//           />\n//           <Statistics\n//             good={good}\n//             neutral={neutral}\n//             bad={bad}\n//             total={this.countTotalFeedback()}\n//             positivePercentage={\n//               this.countPositiveFeedbackPercentage() > 0\n//                 ? this.countPositiveFeedbackPercentage()\n//                 : 0\n//             }\n//           />\n//         </Section>\n//       </>\n//     );\n//   }\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}